/*
The span si of a stockâ€™s price on a certain day i is the minimum number of consecutive days (up to the current day) the price of the stock has been less than its price on that ith day. If for a particular day, if no stock price is greater then just count the number of days till 0th day including current day.
For eg. if given price array is {3, 6, 8, 1, 2}, span for 4th day (which has price 2) is 2 because minimum count of consecutive days (including 4th day itself) from current day which has price less than 4th day is 2 (i.e. day 3 & 4). Similarly, span for 2nd day is 3 because no stock price in left is greater than 2nd day's price. So count is 3 till 0th day.
Given an input array with all stock prices, you need to return the array with corresponding spans of each day.
*/

#include<bits/stdc++.h>

int* stockSpan(int *prices, int size) {
    int *arr = new int[size];
    vector<pair<int, int>> v;
	for(int i=0; i<size; i++) {
        int price = prices[i];
        if(v.empty()) {
            v.push_back(make_pair(price,1));
            arr[i] = 1;
        }
        else if(v.back().first > price) {
            v.push_back(make_pair(price,1));
            arr[i] = 1;
        }
        else {
            int j = v.size()-1;
            int ans = 1;
            while(j>=0 && v[j].first < price) {
                ans += v[j].second;
                j -= v[j].second;
            }
            v.push_back(make_pair(price,ans));
            arr[i] = ans;
        }
    }
    return arr;
}
